{
  "folderName": "assets",
  "folderPath": ".autodoc/docs/json/apps/marginfi-landing-page/src/assets",
  "url": "https://github.com/mrgnlabs/mrgn-ts/.autodoc/docs/json/apps/marginfi-landing-page/src/assets",
  "files": [
    {
      "fileName": "token_info.json",
      "filePath": "apps/marginfi-landing-page/src/assets/token_info.json",
      "url": "https://github.com/mrgnlabs/mrgn-ts/apps/marginfi-landing-page/src/assets/token_info.json",
      "summary": "This code defines an array of objects that represent different tokens on the Solana blockchain. Each object contains information about a specific token, such as its address, chain ID, decimals, name, symbol, logo URI, and coingecko ID. \n\nThe purpose of this code is to provide a centralized location for storing information about different tokens that are used within the mrgn-ts project. This information can be used by other parts of the project to interact with these tokens, such as querying their balances or transferring them between accounts. \n\nFor example, if a user wants to transfer some Wrapped SOL tokens to another account, they would need to know the token's address and decimals. This information can be obtained from the object in the array that corresponds to Wrapped SOL. \n\n```\nconst wrappedSol = tokens.find(token => token.symbol === 'SOL');\nconst transferAmount = 1000000000; // 1 Wrapped SOL\nconst recipientAddress = 'So22222222222222222222222222222222222222222';\n\n// Transfer Wrapped SOL to recipient\nawait connection.sendTransaction(\n  new Transaction().add(\n    SystemProgram.transfer({\n      fromPubkey: wallet.publicKey,\n      toPubkey: new PublicKey(recipientAddress),\n      lamports: transferAmount,\n    })\n  ),\n  [wallet],\n  { skipPreflight: false, preflightCommitment: 'singleGossip' }\n);\n```\n\nOverall, this code serves as a useful reference for developers working on the mrgn-ts project who need to interact with different tokens on the Solana blockchain. By centralizing this information in one place, it helps to reduce errors and improve code maintainability.",
      "questions": "1. What is the purpose of this code?\n   \n   This code defines a list of tokens with their respective attributes such as name, symbol, address, and logo URI.\n\n2. What blockchain network is this code intended for?\n   \n   This code is intended for the blockchain network with chain ID 101.\n\n3. What is the significance of the \"extensions\" field in each token object?\n   \n   The \"extensions\" field contains additional information about the token, such as its ID on the Coingecko platform."
    }
  ],
  "folders": [
    {
      "folderName": "IBM_Plex_Mono",
      "folderPath": ".autodoc/docs/json/apps/marginfi-landing-page/src/assets/IBM_Plex_Mono",
      "url": "https://github.com/mrgnlabs/mrgn-ts/.autodoc/docs/json/apps/marginfi-landing-page/src/assets/IBM_Plex_Mono",
      "files": [
        {
          "fileName": "OFL.txt",
          "filePath": "apps/marginfi-landing-page/src/assets/IBM_Plex_Mono/OFL.txt",
          "url": "https://github.com/mrgnlabs/mrgn-ts/apps/marginfi-landing-page/src/assets/IBM_Plex_Mono/OFL.txt",
          "summary": "This code is a license for a font called \"Plex\" that is being used in the mrgn-ts project. The license is the SIL Open Font License, Version 1.1. The license allows the font to be used, studied, modified, and redistributed freely as long as it is not sold by itself. The font can be bundled, embedded, redistributed, and/or sold with any software provided that any reserved names are not used by derivative works. The font and its derivatives cannot be released under any other type of license. The requirement for the font to remain under this license does not apply to any document created using the font or its derivatives.\n\nThis license is important for the mrgn-ts project because it ensures that the font being used is legally allowed to be used, modified, and distributed freely. It also ensures that any derivative works of the font cannot be released under any other type of license. This helps to protect the project from any legal issues that may arise from the use of the font.\n\nExample of how this license may be used in the mrgn-ts project:\n\n```html\n<head>\n  <link href=\"https://fonts.googleapis.com/css?family=Plex&display=swap\" rel=\"stylesheet\">\n</head>\n```\n\nIn this example, the font \"Plex\" is being used in the mrgn-ts project through the Google Fonts API. The SIL Open Font License, Version 1.1 ensures that the font can be used in this way without any legal issues.",
          "questions": "1. What is the purpose of this code?\n   \n   This code is the license for the mrgn-ts font software, which is licensed under the SIL Open Font License, Version 1.1.\n\n2. Can the licensed fonts be sold?\n   \n   No, the licensed fonts, including any derivative works, cannot be sold by themselves. However, they can be bundled, embedded, redistributed, and/or sold with any software provided that any reserved names are not used by derivative works.\n\n3. What are the conditions for using, modifying, and distributing the licensed fonts?\n   \n   The licensed fonts can be used, studied, modified, and redistributed freely as long as they are not sold by themselves. Any modified versions of the font software must be distributed entirely under the SIL Open Font License, Version 1.1, and must not be released under any other type of license. Additionally, any reserved font names cannot be used unless explicit written permission is granted by the corresponding copyright holder."
        }
      ],
      "folders": [],
      "summary": "The folder `.autodoc/docs/json/apps/marginfi-landing-page/src/assets/IBM_Plex_Mono` contains the OFL.txt file, which is a license for the font called \"Plex\" that is being used in the mrgn-ts project. This license ensures that the font can be used, modified, and distributed freely without any legal issues.\n\nThe IBM_Plex_Mono font is a monospaced font that is part of the IBM Plex font family. It is designed to be used in programming environments and is optimized for legibility and ease of use. The font is available in several weights and styles, including regular, bold, italic, and bold italic.\n\nIn the context of the mrgn-ts project, the IBM_Plex_Mono font may be used in various parts of the project where a monospaced font is required. For example, it may be used in the code editor or terminal interface of the project. The font may also be used in the project's documentation or website to provide a consistent and professional look and feel.\n\nHere is an example of how the IBM_Plex_Mono font may be used in the mrgn-ts project:\n\n```css\nbody {\n  font-family: 'IBM Plex Mono', monospace;\n  font-size: 16px;\n  line-height: 1.5;\n}\n```\n\nIn this example, the IBM_Plex_Mono font is set as the font family for the body element of the project's website. The monospace fallback ensures that the font is displayed correctly on all devices and browsers. The font size and line height are also set to provide a comfortable reading experience.\n\nOverall, the IBM_Plex_Mono font is an important part of the mrgn-ts project's design and functionality. Its legibility and ease of use make it an ideal choice for programming environments, and its availability under the SIL Open Font License, Version 1.1 ensures that it can be used freely without any legal issues.",
      "questions": ""
    },
    {
      "folderName": "IBM_Plex_Sans",
      "folderPath": ".autodoc/docs/json/apps/marginfi-landing-page/src/assets/IBM_Plex_Sans",
      "url": "https://github.com/mrgnlabs/mrgn-ts/.autodoc/docs/json/apps/marginfi-landing-page/src/assets/IBM_Plex_Sans",
      "files": [
        {
          "fileName": "OFL.txt",
          "filePath": "apps/marginfi-landing-page/src/assets/IBM_Plex_Sans/OFL.txt",
          "url": "https://github.com/mrgnlabs/mrgn-ts/apps/marginfi-landing-page/src/assets/IBM_Plex_Sans/OFL.txt",
          "summary": "This code is a license for the use of a font called \"Plex\" that is owned by IBM Corp. The license is the SIL Open Font License, Version 1.1, which allows the font to be used, studied, modified, and redistributed freely as long as it is not sold by itself. The font can be bundled, embedded, redistributed, and/or sold with any software provided that any reserved names are not used by derivative works. The license also states that the font and its derivatives cannot be released under any other type of license. The requirement for the font to remain under this license does not apply to any document created using the font or its derivatives.\n\nThis license is important for the mrgn-ts project because it allows the project to use the \"Plex\" font without any legal issues. The license ensures that the font can be modified and redistributed freely, which is important for a project that may need to customize the font for its specific needs. The license also allows the font to be bundled with any software, which is important for a project that may need to distribute the font with its software.\n\nExample of how this license may be used in the mrgn-ts project:\n\n```html\n<head>\n  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=IBM+Plex+Sans\">\n</head>\n<body>\n  <h1 style=\"font-family: 'IBM Plex Sans', sans-serif;\">Welcome to mrgn-ts!</h1>\n  <p style=\"font-family: 'IBM Plex Sans', sans-serif;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed euismod, nisl vel bibendum bibendum, velit sapien bibendum sapien, vel bibendum sapien sapien vel sapien.</p>\n</body>\n```\n\nIn this example, the \"Plex\" font is being used in the mrgn-ts project through the Google Fonts API. The font is specified in the CSS using the font-family property, which is set to \"IBM Plex Sans\". This is possible because the font is licensed under the SIL Open Font License, Version 1.1, which allows the font to be used and distributed freely.",
          "questions": "1. What is the purpose of this code?\n   \n   This code is the license for the mrgn-ts font software, which is licensed under the SIL Open Font License, Version 1.1.\n\n2. Can the licensed fonts be sold?\n   \n   No, the licensed fonts, including any derivative works, cannot be sold by themselves. However, they can be bundled, embedded, redistributed, and/or sold with any software provided that any reserved names are not used by derivative works.\n\n3. What are the conditions for using and distributing the licensed fonts?\n   \n   The licensed fonts can be used, studied, copied, merged, embedded, modified, redistributed, and sold, subject to certain conditions, including that the fonts must be distributed entirely under the SIL Open Font License, Version 1.1, and that any reserved font names cannot be used without explicit written permission from the corresponding copyright holder."
        }
      ],
      "folders": [],
      "summary": "The OFL.txt file in the `.autodoc/docs/json/apps/marginfi-landing-page/src/assets/IBM_Plex_Sans` folder contains the license for the \"Plex\" font owned by IBM Corp. The license is the SIL Open Font License, Version 1.1, which allows the font to be used, studied, modified, and redistributed freely as long as it is not sold by itself. The font can be bundled, embedded, redistributed, and/or sold with any software provided that any reserved names are not used by derivative works. The license also states that the font and its derivatives cannot be released under any other type of license. The requirement for the font to remain under this license does not apply to any document created using the font or its derivatives.\n\nThis license is important for the mrgn-ts project because it allows the project to use the \"Plex\" font without any legal issues. The license ensures that the font can be modified and redistributed freely, which is important for a project that may need to customize the font for its specific needs. The license also allows the font to be bundled with any software, which is important for a project that may need to distribute the font with its software.\n\nAn example of how this license may be used in the mrgn-ts project is through the Google Fonts API. The font can be specified in the CSS using the font-family property, which is set to \"IBM Plex Sans\". This is possible because the font is licensed under the SIL Open Font License, Version 1.1, which allows the font to be used and distributed freely.\n\nOverall, the OFL.txt file in the `.autodoc/docs/json/apps/marginfi-landing-page/src/assets/IBM_Plex_Sans` folder is an important component of the mrgn-ts project as it ensures that the project can use the \"Plex\" font without any legal issues. Developers working on the project can refer to this file to understand the terms of the license and ensure that they are complying with it.",
      "questions": ""
    }
  ],
  "summary": "The `token_info.json` file in the `.autodoc/docs/json/apps/marginfi-landing-page/src/assets` folder defines an array of objects that represent different tokens on the Solana blockchain. Each object contains information about a specific token, such as its address, chain ID, decimals, name, symbol, logo URI, and coingecko ID. This information can be used by other parts of the mrgn-ts project to interact with these tokens, such as querying their balances or transferring them between accounts.\n\nFor example, if a user wants to transfer some Wrapped SOL tokens to another account, they would need to know the token's address and decimals. This information can be obtained from the object in the array that corresponds to Wrapped SOL. The code snippet below shows how this information can be used to transfer Wrapped SOL tokens:\n\n```\nconst wrappedSol = tokens.find(token => token.symbol === 'SOL');\nconst transferAmount = 1000000000; // 1 Wrapped SOL\nconst recipientAddress = 'So22222222222222222222222222222222222222222';\n\n// Transfer Wrapped SOL to recipient\nawait connection.sendTransaction(\n  new Transaction().add(\n    SystemProgram.transfer({\n      fromPubkey: wallet.publicKey,\n      toPubkey: new PublicKey(recipientAddress),\n      lamports: transferAmount,\n    })\n  ),\n  [wallet],\n  { skipPreflight: false, preflightCommitment: 'singleGossip' }\n);\n```\n\nIn this example, the `tokens` array is searched for the object that corresponds to Wrapped SOL using the `find` method. The `transferAmount` and `recipientAddress` variables are then set, and the `SystemProgram.transfer` method is used to transfer the tokens to the recipient's address.\n\nOverall, the `token_info.json` file serves as a centralized location for storing information about different tokens used within the mrgn-ts project. This information can be used by other parts of the project to interact with these tokens, reducing errors and improving code maintainability. Developers working on the project can refer to this file to understand the properties of different tokens and use them in their code.",
  "questions": ""
}
